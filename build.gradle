buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.owasp:dependency-check-gradle:4.0.1'
		classpath 'org.apache.logging.log4j:log4j-core:2.8.2'
		classpath 'org.apache.logging.log4j:log4j-api:2.8.2'
	}
}

plugins {
	id "nebula.ospackage" version "4.5.1"
	id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'

group = 'com.thoughtworks'
version = '1.0.0'

description = "Sync from Mart to DHIS"

targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-batch')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.postgresql:postgresql')
	compile('com.google.code.gson:gson:2.8.4')
	compile('org.projectlombok:lombok:1.18.2')
	compile('org.apache.logging.log4j:log4j-core:2.8.2') {force=true}
	compile('org.apache.logging.log4j:log4j-api:2.8.2') {force=true}
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile 'org.apache.httpcomponents:httpclient:4.5.10'

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.batch:spring-batch-test')
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
	testCompile group: 'org.powermock', name: 'powermock-core', version: '1.6.4'
	testCompile "org.powermock:powermock-module-junit4:1.6.4"
	testCompile "org.powermock:powermock-module-junit4-rule:1.6.4"
	testCompile "org.powermock:powermock-api-mockito:1.6.4"
}

jacoco {
	toolVersion = "0.7.9"
}

jacocoTestReport {
	dependsOn "test"
}

test {
	systemProperties System.properties
}

jacocoTestCoverageVerification {
	dependsOn "jacocoTestReport"
	violationRules {
		rule {
			limit {
				minimum = 0.200
			}
		}

		rule {
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.000
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

jar {
	manifest {
		attributes 'Main-Class': 'com.thoughtworks.martdhis2sync'
	}
}

ospackage {
	packageName = 'mart-dhis2-sync'
	release =  project.hasProperty('buildNumber') ? project.getProperty('buildNumber') : 1
	arch = NOARCH
	os = LINUX
	user = 'root'

	into '/opt/mart-dhis2-sync'

	from("${projectDir}/scripts/rpm/") {
		fileMode = 0755
		createDirectoryEntry = true
		into '/opt/mart-dhis2-sync/bin'
	}

	from("${projectDir}/migrations/") {
		fileMode = 0755
		createDirectoryEntry = true
		into '/opt/mart-dhis2-sync/migrations'
	}

	from("${projectDir}/resources/") {
		fileMode = 0755
		createDirectoryEntry = true
		into '/opt/mart-dhis2-sync/etc'
	}

	from("${buildDir}/libs") {
		include(String.format("%s-%s.jar", project.name, project.version))
		fileMode = 0755
		createDirectoryEntry = true
		rename(String.format("%s-%s.jar", project.name, project.version), String.format("%s.jar", project.name))
		into "/opt/mart-dhis2-sync/lib"
	}
}

buildRpm {
	dependsOn "build", "jar"

	postInstall file("${projectDir}/scripts/postinstall.sh")
	preInstall file("${projectDir}/scripts/preinstall.sh")
	preUninstall file("${projectDir}/scripts/preuninstall.sh")
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.8.1'
}

dependencyCheck {
	analyzers {
		centralEnabled = false
	}
	suppressionFile = './owasp-suppressions.xml'
	failBuildOnCVSS = 8
}
